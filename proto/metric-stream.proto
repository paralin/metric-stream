syntax="proto3";
package metricstream;

import "github.com/fuserobotics/rethinkts/metric/metric-service.proto";

// This is a temporary stopgap proto until
// https://github.com/dcodeIO/protobuf.js/issues/468

// Wrapper for a message from client
message MSClientMessage {
  MSSubscribe metric_subscribe = 2;
  MSUnsubscribe metric_unsubscribe = 3;
}

message MSServerMessage {
  MSSubscribeResult subscribe_result = 2;
  MSUnsubscribeResult unsubscribe_result = 3;
}

// Request to subscribe to metric
message MSSubscribe {
  metric.RequestContext context = 1;
  metric.MetricDatapointQuery query = 2;
  string subscription_id = 3;
}

message MSSubscribeResult {
  MSSubscribeResultType error = 1;
  string error_details = 2;
  string subscription_id = 3;

  enum MSSubscribeResultType {
    SUBSCRIBE_OK = 0;
    // Subscribe ID bad - duplicate or otherwise not good
    // Just generate another random ID and retry
    SUBSCRIBE_BAD_ID = 1;
    // Error talking to RethinkTS
    SUBSCRIBE_GRPC_ERR = 2;
  }
}

message MSUnsubscribe {
  string subscription_id = 3;
}

message MSUnsubscribeResult {
  string subscription_id = 3;
}
